--
-- PostgreSQL database dump
--

-- Dumped from database version 12.4
-- Dumped by pg_dump version 12.4

\connect declarative

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: api_token; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.api_token (
    id integer NOT NULL,
    token character varying(255) NOT NULL,
    user_login character varying(255) NOT NULL
);


ALTER TABLE public.api_token OWNER TO postgres;

--
-- Name: api_token_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.api_token ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_token_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: changed_variable; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.changed_variable (
    id integer NOT NULL,
    changed_variable character varying(16) NOT NULL,
    value_before text NOT NULL,
    value_after text NOT NULL,
    newsfeed_event_id integer NOT NULL,
    deleted boolean DEFAULT false NOT NULL
);


ALTER TABLE public.changed_variable OWNER TO postgres;

--
-- Name: changed_variable_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.changed_variable ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.changed_variable_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

--
-- Name: newsfeed_event; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.newsfeed_event (
    id integer NOT NULL,
    "time" time with time zone DEFAULT now() NOT NULL,
    date date DEFAULT now() NOT NULL,
    newsfeed_event_type character varying(16) NOT NULL,
    author_id integer,
    related_packagemaintainer_id integer,
    related_repositorymaintainer_id integer,
    related_user_id integer,
    related_submission_id integer,
    related_repository_id integer,
    related_package_id integer,
    related_accesstoken_id integer,
    deleted boolean DEFAULT false NOT NULL
);


ALTER TABLE public.newsfeed_event OWNER TO postgres;

--
-- Name: newsfeed_event_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.newsfeed_event ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.newsfeed_event_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: package; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.package (
    id integer NOT NULL,
    name text NOT NULL,
    version text NOT NULL,
    description text NOT NULL,
    author text NOT NULL,
    maintainer_id integer NOT NULL,
    repository_id integer NOT NULL,
    url text,
    source text NOT NULL,
    title text NOT NULL,
    active boolean DEFAULT false NOT NULL,
    deleted boolean DEFAULT false NOT NULL,
    resource_technology text NOT NULL
);


ALTER TABLE public.package OWNER TO postgres;

--
-- Name: package_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.package ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.package_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: package_maintainer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.package_maintainer (
    id integer NOT NULL,
    user_id integer NOT NULL,
    package text NOT NULL,
    repository_id integer NOT NULL,
    deleted boolean DEFAULT false NOT NULL
);


ALTER TABLE public.package_maintainer OWNER TO postgres;

--
-- Name: package_maintainer_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.package_maintainer ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.package_maintainer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: rrepository; Type: TABLE; Schema: public; Owner: postgres
--

--
-- Name: pythonpackage; Type: TABLE; Schema: public; Owner: postgres
--
CREATE TABLE public.pythonpackage (
    id integer NOT NULL,
    author_email text ,
    classifier text,
    description_content_type text,
    home_page text,
    keywords text,
    license text,
    maintainer text,
    maintainer_email text,
    platform text,
    project_url text,
    provides_extra text,
    requires_dist text,
    requires_external text,
    requires_python text,
    summary text,
    hash text NOT NULL
);


ALTER TABLE public.pythonpackage OWNER TO postgres;

--
-- Name: pythonrepository; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.pythonrepository (
    id integer NOT NULL,
    hash_method text NOT NULL
);


ALTER TABLE public.pythonrepository OWNER TO postgres;

--
-- Name: repository; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.repository (
    id integer NOT NULL,
    version integer DEFAULT 0 NOT NULL,
    publication_uri text NOT NULL,
    name text NOT NULL,
    server_address text NOT NULL,
    published boolean DEFAULT false NOT NULL,
    deleted boolean DEFAULT false NOT NULL,
    resource_technology text NOT NULL
);


ALTER TABLE public.repository OWNER TO postgres;

--
-- Name: repository_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.repository ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.repository_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: repository_maintainer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.repository_maintainer (
    id integer NOT NULL,
    user_id integer NOT NULL,
    repository_id integer NOT NULL,
    deleted boolean DEFAULT false NOT NULL
);


ALTER TABLE public.repository_maintainer OWNER TO postgres;

--
-- Name: repository_maintainer_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.repository_maintainer ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.repository_maintainer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: role; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.role (
    id integer NOT NULL,
    value integer NOT NULL,
    name text NOT NULL,
    description text NOT NULL,
    deleted boolean DEFAULT false
);


ALTER TABLE public.role OWNER TO postgres;

--
-- Name: role_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.role ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.role_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: rpackage; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rpackage (
    id integer NOT NULL,
    depends text,
    imports text,
    suggests text,
    system_requirements text,
    license text NOT NULL,
    md5sum text
);


ALTER TABLE public.rpackage OWNER TO postgres;

--
-- Name: rrepository; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rrepository (
    id integer NOT NULL
);


ALTER TABLE public.rrepository OWNER TO postgres;

--
-- Name: submission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.submission (
    id integer NOT NULL,
    submitter_id integer NOT NULL,
    approver_id integer,
    package_id integer NOT NULL,
    deleted boolean DEFAULT false NOT NULL,
    changes text,
    state text NOT NULL
);


ALTER TABLE public.submission OWNER TO postgres;

--
-- Name: submission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.submission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.submission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."user" (
    id integer NOT NULL,
    role_id integer DEFAULT 4 NOT NULL,
    name text NOT NULL,
    email text NOT NULL,
    login text NOT NULL,
    active boolean NOT NULL,
    last_logged_in_on date,
    deleted boolean DEFAULT false NOT NULL,
    created_on date DEFAULT '1970-01-01'::date NOT NULL
);


ALTER TABLE public."user" OWNER TO postgres;

--
-- Name: user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."user" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

--
-- Name: access_token; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.access_token (
    id integer NOT NULL,
    user_id integer NOT NULL,
    name character varying(255) NOT NULL,
    value character varying(255) NOT NULL,
    creation_date date DEFAULT now() NOT NULL,
    expiration_date date DEFAULT now() + INTERVAL '30 days' NOT NULL,
    active boolean DEFAULT true NOT NULL,
    deleted boolean DEFAULT false NOT NULL
);

ALTER TABLE public.access_token OWNER TO postgres;

--
-- Name: access_token_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.access_token ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.access_token_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

--
-- Data for Name: api_token; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.api_token (id, token, user_login) FROM stdin;
2	eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJlaW5zdGVpbiJ9.9VweA_kotRnnLn9giSE511MhWX4iDwtx85lidw_ZT5iTQ1aOB-3ytJNDB_Mrcop2H22MNhMjbpUW_sraHdvOlw	einstein
3	eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZXNsYSJ9.FEQ3KqMvTj4LQAgQx23f6Y0Z7PzKHgcO1a1UodG5iwCrzXhk6tHCR6V0T16F1tWtMMF0a3AQIShczN__d6KsFA	tesla
4	eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJnYWxpZWxlbyJ9.Hp95DiIZ0L0JXyQZOvhJkzyTDzNuos81QoTWfLeVPlodWvGg7ziJTI6nJFitg5VAwrGmA4wpbWbjK9aItCKB3A	galieleo
5	eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJuZXd0b24ifQ.3E7UwKTwc8DchKRUSD_hdJxOcl4L6SOguwbm9WmVzWU4YDQMkIJ_wVNidpus6gNJvyT6OR6pREkfQCnWkEhEBQ	newton
\.

--
-- Data for Name: repository; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.repository (id, version, publication_uri, name, server_address, published, deleted, resource_technology) FROM stdin;
2	0	http://localhost/repo/oldWrongUri	A	http://oa-rdepot-repo:8080/oldWrongUri	f	f	R
3	0	http://localhost/repo/B	B	http://oa-rdepot-repo:8080/B	f	f	R
4	0	http://localhost/repo/C	C	http://oa-rdepot-repo:8080/C	f	f	R
5	0	http://localhost/repo/G	G	http://oa-rdepot-repo:8080/G	f	f	R
6	0	http://localhost/repo/H	H	http://oa-rdepot-repo:8080/H	f	t	R
11	1	http://localhost/repo/testrepo11	testrepo11	http://oa-rdepot-repo:8080/testrepo11	t	t	Python
12	1	http://localhost/repo/testrepo12	testrepo12	http://oa-rdepot-repo:8080/testrepo12	f	t	Python
10	7	http://localhost/repo/testrepo10	testrepo10	http://oa-rdepot-repo:8080/testrepo10	f	f	Python
9	4	http://localhost/repo/testrepo9	testrepo9	http://oa-rdepot-repo:8080/testrepo9	f	f	Python
8	7	http://localhost/repo/testrepo8	testrepo8	http://oa-rdepot-repo:8080/testrepo8	t	f	Python
\.


--
-- Data for Name: role; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.role (id, value, name, description, deleted) FROM stdin;
1	0	user	User	f
2	1	packagemaintainer	Package Maintainer	f
3	2	repositorymaintainer	Repository Maintainer	f
4	3	admin	Administrator	f
\.


--
-- Data for Name: rrepository; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.rrepository (id) FROM stdin;
5
4
3
6
2
\.

--
-- Data for Name: pythonrepository; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.pythonrepository (id, hash_method) FROM stdin;
8	SHA256
9	SHA256
10	SHA224
11	MD5
\.

--
-- Data for Name: user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."user" (id, role_id, name, email, login, active, last_logged_in_on, deleted, created_on) FROM stdin;
8	4	Local Admin User	admin@localhost	admin	f	\N	f	1970-01-01
7	1	Isaac Newton	newton@ldap.forumsys.com	newton	t	2020-03-28	f	1970-01-01
6	2	Galileo Galilei	galieleo@ldap.forumsys.com	galieleo	t	2020-03-28	f	1970-01-01
5	3	Nikola Tesla	tesla@ldap.forumsys.com	tesla	t	2020-03-29	f	1970-01-01
4	4	Albert Einstein	einstein@ldap.forumsys.com	einstein	t	2020-08-20	f	1970-01-01
9	1	John Doe	doe@localhost	doe	f	2020-08-20	f	1970-01-01
10	1	Alfred Tarski	tarski@localhost	tarski	t	2020-08-25	f	1970-01-01
\.


--
-- Name: user_settings; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.user_settings (
    id integer NOT NULL,
    deleted boolean NOT NULL,
    language character varying(16) NOT NULL,
    theme character varying(16) NOT NULL,
    page_size integer NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.user_settings OWNER TO postgres;

--
-- Name: user_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.user_settings ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.user_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: user_settings; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.user_settings (id, deleted, language, theme, page_size, user_id) FROM stdin;
1	f	pl-PL	light	20	4
\.

--
-- Data for Name: access_token; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.access_token (id, user_id, name, value, creation_date, expiration_date, active, deleted) FROM stdin;
1	4	try	$2a$10$3TW2U4rpOPOPmBhjzi/fhOc9wXuOzToKm50RBqOrHBPM26XcSwHmm	2023-11-15	2024-11-15	t	f
2	7	second	$2a$10$SWxoWZVvKAlB0/50Eue5I.zaNISqvMNQt0z1R.uW9ffzuVAumSFeW	2023-12-04	2024-12-04	t	f
3	7	deactivated	$2a$10$lYWNkyYCl0tFS70wbimw4u9jUFM.jZzGTarEu46KsoqdiQROGDgaK	2023-12-05	2023-12-10	f	f
4	7	expired	$2a$10$ehM3ODJi6FNJcABKlHT1AOxmpuQZKB7RxnCCC9z8tI7E6tJWFfqlS	2023-12-06	2023-12-07	f	f
5	4	century	$2a$10$pRIEsjpErZ3pt.k2.9yZ3.l8YV9GATfH3vKe4gZuM2IdF3yfct56C	2024-01-19	2124-12-31	t	f
6	5	century	$2a$10$BCP6uFaJRLJD2fx3IWDRNOnFkkKTugWjCFIe8CNoC.iR.MbM.ubOO	2024-01-19	2124-12-31	t	f
7	6	century	$2a$10$bAprhSNIWmFXBY5RA9SgKOpmGpaeTzcrDWXceawLbky6WFG.3nqqK	2024-01-19	2124-12-31	t	f
8	7	century	$2a$10$sfnJ0DtxdmqCOGemySK1qOFT1COAWTHguCEa9NlIH/ZqcYt7fTLsK	2024-01-19	2124-12-31	t	f
\.


--
-- Name: user_settings_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.user_settings_id_seq', 1, true);


--
-- Name: api_token_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.api_token_id_seq', 5, true);


--
-- Name: changed_variable_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.changed_variable_id_seq', 1, false);


--
-- Name: newsfeed_event_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.newsfeed_event_id_seq', 1, false);


--
-- Name: package_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.package_id_seq', 1, true);


--
-- Name: package_maintainer_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.package_maintainer_id_seq', 1, true);


--
-- Name: repository_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.repository_id_seq', 6, true);


--
-- Name: repository_maintainer_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.repository_maintainer_id_seq', 1, true);


--
-- Name: role_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.role_id_seq', 4, true);


--
-- Name: submission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.submission_id_seq', 1, true);


--
-- Name: user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.user_id_seq', 10, true);

--
-- Name: access_token_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.access_token_id_seq', 8, true);

--
-- Name: api_token api_token_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_token
    ADD CONSTRAINT api_token_pkey PRIMARY KEY (id);


--
-- Name: api_token api_token_token_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_token
    ADD CONSTRAINT api_token_token_key UNIQUE (token);


--
-- Name: api_token api_token_user_login_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.api_token
    ADD CONSTRAINT api_token_user_login_key UNIQUE (user_login);


--
-- Name: changed_variable changed_variable_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.changed_variable
    ADD CONSTRAINT changed_variable_pkey PRIMARY KEY (id);


--
-- Name: newsfeed_event newsfeed_event_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.newsfeed_event
    ADD CONSTRAINT newsfeed_event_pkey PRIMARY KEY (id);


--
-- Name: package_maintainer package_maintainer_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.package_maintainer
    ADD CONSTRAINT package_maintainer_pkey PRIMARY KEY (id);


--
-- Name: package package_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.package
    ADD CONSTRAINT package_pkey PRIMARY KEY (id);


--
-- Name: rpackage rpackage_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pythonpackage
    ADD CONSTRAINT pythonpackage_pkey PRIMARY KEY (id);


--
-- Name: rrepository rrepository_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pythonrepository
    ADD CONSTRAINT pythonrepository_pkey PRIMARY KEY (id);


--
-- Name: repository_maintainer repository_maintainer_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.repository_maintainer
    ADD CONSTRAINT repository_maintainer_pkey PRIMARY KEY (id);


--
-- Name: repository repository_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.repository
    ADD CONSTRAINT repository_name_key UNIQUE (name);


--
-- Name: repository repository_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.repository
    ADD CONSTRAINT repository_pkey PRIMARY KEY (id);


--
-- Name: repository repository_publication_uri_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.repository
    ADD CONSTRAINT repository_publication_uri_key UNIQUE (publication_uri);


--
-- Name: role role_description_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role
    ADD CONSTRAINT role_description_key UNIQUE (description);


--
-- Name: role role_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role
    ADD CONSTRAINT role_name_key UNIQUE (name);


--
-- Name: role role_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role
    ADD CONSTRAINT role_pkey PRIMARY KEY (id);


--
-- Name: role role_value_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role
    ADD CONSTRAINT role_value_key UNIQUE (value);


--
-- Name: rpackage rpackage_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rpackage
    ADD CONSTRAINT rpackage_pkey PRIMARY KEY (id);


--
-- Name: rrepository rrepository_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rrepository
    ADD CONSTRAINT rrepository_pkey PRIMARY KEY (id);


--
-- Name: submission submission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.submission
    ADD CONSTRAINT submission_pkey PRIMARY KEY (id);


--
-- Name: user user_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT user_email_key UNIQUE (email);


--
-- Name: user user_login_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT user_login_key UNIQUE (login);


--
-- Name: user user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT user_pkey PRIMARY KEY (id);


--
-- Name: newsfeed_event author; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.newsfeed_event
    ADD CONSTRAINT author FOREIGN KEY (author_id) REFERENCES public."user"(id);


--
-- Name: submission for_package; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.submission
    ADD CONSTRAINT for_package FOREIGN KEY (package_id) REFERENCES public.package(id);


--
-- Name: package for_repository; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.package
    ADD CONSTRAINT for_repository FOREIGN KEY (repository_id) REFERENCES public.repository(id);


--
-- Name: submission from_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.submission
    ADD CONSTRAINT from_user FOREIGN KEY (submitter_id) REFERENCES public."user"(id);

ALTER TABLE ONLY public.submission
    ADD CONSTRAINT approved_by FOREIGN KEY (approver_id) REFERENCES public."user"(id);

--
-- Name: user has_role; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT has_role FOREIGN KEY (role_id) REFERENCES public.role(id);


--
-- Name: package is_maintainer_of; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.package
    ADD CONSTRAINT is_maintainer_of FOREIGN KEY (maintainer_id) REFERENCES public."user"(id);


--
-- Name: package_maintainer is_package_maintainer; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.package_maintainer
    ADD CONSTRAINT is_package_maintainer FOREIGN KEY (user_id) REFERENCES public."user"(id);


--
-- Name: package_maintainer is_package_maintainer_of; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.package_maintainer
    ADD CONSTRAINT is_package_maintainer_of FOREIGN KEY (repository_id) REFERENCES public.repository(id);


--
-- Name: repository_maintainer is_repository_maintainer; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.repository_maintainer
    ADD CONSTRAINT is_repository_maintainer FOREIGN KEY (user_id) REFERENCES public."user"(id);


--
-- Name: changed_variable newsfeed_event; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.changed_variable
    ADD CONSTRAINT newsfeed_event FOREIGN KEY (newsfeed_event_id) REFERENCES public.newsfeed_event(id) ON DELETE CASCADE;


--
-- Name: repository_maintainer of_repository; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.repository_maintainer
    ADD CONSTRAINT of_repository FOREIGN KEY (repository_id) REFERENCES public.repository(id);


--
-- Name: newsfeed_event related_package; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.newsfeed_event
    ADD CONSTRAINT related_package FOREIGN KEY (related_package_id) REFERENCES public.package(id);


--
-- Name: newsfeed_event related_packagemaintainer; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.newsfeed_event
    ADD CONSTRAINT related_packagemaintainer FOREIGN KEY (related_packagemaintainer_id) REFERENCES public.package_maintainer(id);


--
-- Name: newsfeed_event related_repository; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.newsfeed_event
    ADD CONSTRAINT related_repository FOREIGN KEY (related_repository_id) REFERENCES public.repository(id);


--
-- Name: newsfeed_event related_repositorymaintainer; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.newsfeed_event
    ADD CONSTRAINT related_repositorymaintainer FOREIGN KEY (related_repositorymaintainer_id) REFERENCES public.repository_maintainer(id);


--
-- Name: newsfeed_event related_submission; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.newsfeed_event
    ADD CONSTRAINT related_submission FOREIGN KEY (related_submission_id) REFERENCES public.submission(id);


--
-- Name: newsfeed_event related_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.newsfeed_event
    ADD CONSTRAINT related_user FOREIGN KEY (related_user_id) REFERENCES public."user"(id);

--
-- Name: newsfeed_event related_accesstoken; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.newsfeed_event
    ADD CONSTRAINT related_accesstoken FOREIGN KEY (related_accesstoken_id) REFERENCES public.access_token(id);


--
-- Name: user_settings user_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_settings
    ADD CONSTRAINT user_settings_pkey PRIMARY KEY (id);


--
-- Name: user_settings user_settings_user_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_settings
    ADD CONSTRAINT user_settings_user_id_key UNIQUE (user_id);


--
-- PostgreSQL database dump complete
--

